services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rag_benchmark}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api_gateway:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    ports:
      - "${API_PORT:-8003}:8003"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./:/app
    command: uvicorn api_gateway.main:app --host 0.0.0.0 --port 8003 --reload

  celery_worker:
    build:
      context: .
      dockerfile: corpus_service/Dockerfile
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    volumes:
      - ./:/app
      - ${DOCUMENT_STORAGE_PATH:-./document_storage}:/app/document_storage
    command: celery -A corpus_service.worker worker --loglevel=info

  flower:
    image: mher/flower:1.2
    ports:
      - "5555:5555"
    environment:
      - FLOWER_BROKER_API=${CELERY_BROKER_URL:-redis://redis:6379/0}
    depends_on:
      - redis
      - celery_worker

volumes:
  postgres_data:
  redis_data:
